[gd_scene load_steps=8 format=3 uid="uid://bygwrxwyu4qwf"]

[ext_resource type="Texture2D" uid="uid://cr4vitbskr3r2" path="res://Assets/Images/flow_line.png" id="1_o84c1"]

[sub_resource type="QuadMesh" id="QuadMesh_d0wd5"]
size = Vector2(1, 0.2)
orientation = 0

[sub_resource type="Shader" id="Shader_d0wd5"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, unshaded, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_nearest_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);


uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float reveal : hint_range(0.0, 1.0) = 1.0;
uniform float hide : hint_range(0.0, 1.0) = 0.0;


void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 uv = UV;
	
	if (uv.x > reveal || uv.x < hide) {
		discard;
	}
	
	vec4 albedo_tex = texture(texture_albedo, uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA = albedo_tex.a * albedo.a;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_o84c1"]
render_priority = 0
shader = SubResource("Shader_d0wd5")
shader_parameter/albedo = Color(1, 1, 1, 0.137255)
shader_parameter/texture_albedo = ExtResource("1_o84c1")
shader_parameter/albedo_texture_size = Vector2i(0, 0)
shader_parameter/point_size = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/reveal = 0.0
shader_parameter/hide = 0.0

[sub_resource type="Animation" id="Animation_o84c1"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:surface_material_override/0:shader_parameter/reveal")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:surface_material_override/0:shader_parameter/hide")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_d0wd5"]
resource_name = "init"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:surface_material_override/0:shader_parameter/reveal")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:surface_material_override/0:shader_parameter/hide")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.5, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_o84c1"]
_data = {
&"RESET": SubResource("Animation_o84c1"),
&"init": SubResource("Animation_d0wd5")
}

[node name="FlowLine" type="MeshInstance3D"]
mesh = SubResource("QuadMesh_d0wd5")
surface_material_override/0 = SubResource("ShaderMaterial_o84c1")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_o84c1")
}
autoplay = "init"
